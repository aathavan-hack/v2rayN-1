name: Backup
on:
  schedule:
    - cron: "10 10 1-31/2 * *"
  push:
    branches:
      - main

env:
  repos: "2dust/v2rayN"

jobs:
  build:
    name: Backup
    runs-on: ubuntu-latest
    steps:
      - name: Backup
        run: |
          latest_version=$(curl  \
          -s "https://api.github.com/repos/$repos/releases/latest" --connect-timeout 10 | grep  -m1 "tag_name" | cut -d\" -f4)
          latest_pre_release_version=$(curl  \
          -s "https://api.github.com/repos/$repos/tags" --connect-timeout 10 | grep  -m1 "name" | cut -d\" -f4)
          if [[ $latest_version != $latest_pre_release_version ]]; then
            latest_version=$latest_pre_release_version
          fi
          echo $latest_version
          that_repos_releases_url="https://api.github.com/repos/$repos/releases"
          self_repos_tag_url="https://api.github.com/repos/${{ github.repository }}/tags"
          if_found=`curl  -s $self_repos_tag_url --connect-timeout 5 | grep "\"name\"\: \"$latest_version\""` || true
          if [ -z ${if_found} ]; then
            rm -fr *
            for file in $(curl  -sSL $that_repos_releases_url | grep 'browser_download_url' | cut -d\" -f4); do
              if [[ $file == */$latest_version/v2rayN.zip ]]; then
                wget -q $file &> /dev/null
              fi
            done
            
            for z in *.zip
              do
                unzip $z
            done
            rm *.zip
            wget -qP $GITHUB_WORKSPACE/v2rayN https://github.com/googleians/Rules/raw/main/geoip.dat &> /dev/null
            wget -qP $GITHUB_WORKSPACE/v2rayN https://github.com/googleians/Rules/raw/main/geosite.dat &> /dev/null
            wget -qP $GITHUB_WORKSPACE/v2rayN https://github.com/googleians/Xray-core/raw/main/xray.exe &> /dev/null
            #wget -qP $GITHUB_WORKSPACE/v2rayN https://github.com/googleians/v2ray-core/raw/main/v2ctl.exe &> /dev/null
            wget -qP $GITHUB_WORKSPACE/v2rayN https://github.com/googleians/v2ray-core/raw/main/v2ray.exe &> /dev/null
            wget -qP $GITHUB_WORKSPACE/v2rayN https://github.com/googleians/v2ray-core/raw/main/wv2ray.exe &> /dev/null
          
            
            7z -v7m a -t7z v2rayN-$(date +"%m-%d-%Y").7z v2rayN/*
            rm -rf v2rayN
                        
            
            if [[ $latest_version != v* ]]; then
            latest_version=v${latest_version}
            fi;echo $latest_version;echo $latest_version;echo $latest_version
            echo -e "|    Size   |     DL  | sha512sum |\n|  ---  |  ---  |  ---  |" > README.md
            shopt -s extglob
            for file in $(ls !(*.md)); do
            echo "| $(expr $(wc -c < $file )  / 1000000  | numfmt --to=iec-i --suffix=MB --format="%f") | [$file](https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/$file) | $(sha512sum  $file | cut -d " " -f1 ) |" >> README.md
            done

            mkdir -p .github/workflows
            wget -qO .github/workflows/Backup.yml https://github.com/${{ github.repository }}/raw/main/.github/workflows/Backup.yml &> /dev/null

            git config --global init.defaultBranch main
            git init
            git add .
            git config user.name "googleians"
            git config user.email "77716481+googleians@users.noreply.github.com"
            git commit -m "Version ${latest_version}"
            git tag -a "$(date +"%m-%d-%Y")" -m "$(date +"%d-%m-%Y")"
            git remote add release "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
            git push -u --follow-tags release main -f
          fi
